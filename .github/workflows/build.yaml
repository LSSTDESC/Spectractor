name: build_and_test

on:
  push:
    branches:
      - main
      - lsst-dev
      - master
  pull_request:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: "3.11"
          miniforge-variant: Mambaforge
          miniforge-version: latest
          show-channel-urls: true
          activate-environment: test

      - name: Install dependencies
        # Might be quicker to install rubin-env plus any necessary additions.
        shell: bash -l {0}
        run: |
          mamba install -y  "numpy>1.15" scipy "matplotlib>3.1" pandas llvmlite numba "astropy>=3.2" "photutils>=1.7" astroquery coloredlogs scikit-image>=0.20 h5py emcee tqdm mpi4py schwimmbad "iminuit>=2" "coverage>=3.6" configparser coveralls deprecated pyyaml nose rubin-libradtran "getCalspec>=2.0.0"
          # python -c "from getCalspec.rebuild import rebuild_tables; rebuild_tables()"
          pip install lsst.utils
          mamba install astrometry

      - name: Download test data
        shell: bash -l {0}
        run: |
          wget -r -q -nc http://data.astrometry.net/5000/index-5002-24.fits
          wget -r -q -nc http://data.astrometry.net/5000/index-5000-40.fits
          mv data.astrometry.net/5000/index-*.fits $CONDA_PREFIX/data/
          export ASTROMETRYNET_DIR=$CONDA_PREFIX

      - name: List installed packages
        shell: bash -l {0}
        run: |
          conda list
          pip list -v

      - name: Build and install
        shell: bash -l {0}
        run: |
          pip install -v --no-deps -e .

      - name: Run full chain
        shell: bash -l {0}
        run: |
          nosetests tests/run_full_chain.py --all --debug --detailed-errors --verbose --process-restartworker --with-coverage --cover-package=spectractor

      - name: Run nosetests
        shell: bash -l {0}
        run: |
          nosetests tests/run_tests.py --all --debug --detailed-errors --verbose --process-restartworker --with-coverage --cover-package=spectractor

      - name: Run doctests and coverage
        shell: bash -l {0}
        run: |
          .github/workflows/coverage_and_test.sh

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip3 install --upgrade coveralls
          coveralls --service=github
